---
- name: Download zed tarball
  ansible.builtin.get_url:
    url: https://zed.dev/api/releases/stable/latest/zed-linux-x86_64.tar.gz
    dest: /tmp/zed-linux-x86_64.tar.gz
    mode: "0644"
  register: download_status

- name: Remove existing zed installation
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.local/opt/zed"
    state: absent
  when: download_status.changed # Remove only if the tarball was re-downloaded

- name: Extract zed to /tmp
  ansible.builtin.unarchive:
    src: /tmp/zed-linux-x86_64.tar.gz
    dest: /tmp
    remote_src: yes
  when: download_status.changed # Extract only if the tarball was re-downloaded

- name: Move zed files to ~/.local/opt/zed
  ansible.builtin.copy:
    src: /tmp/zed.app/
    dest: "{{ ansible_env.HOME }}/.local/opt/zed/"
    remote_src: yes
  when: download_status.changed # Move only if the tarball was re-downloaded

- name: Create symlink to binary
  ansible.builtin.file:
    src: "{{ ansible_env.HOME }}/.local/opt/zed/bin/zed"
    dest: "{{ ansible_env.HOME }}/.local/bin/zed"
    state: link
    force: yes

- name: Create applications directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.local/share/applications"
    state: directory
    mode: '0755'

- name: Install desktop file
  ansible.builtin.copy:
    src: "{{ ansible_env.HOME }}/.local/opt/zed/share/applications/zed.desktop"
    dest: "{{ ansible_env.HOME }}/.local/share/applications/dev.zed.Zed.desktop"
    remote_src: yes
  when: download_status.changed # Install only if the tarball was re-downloaded

- name: Update desktop file Icon path
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.local/share/applications/dev.zed.Zed.desktop"
    regexp: '^Icon=zed'
    line: "Icon={{ ansible_env.HOME }}/.local/opt/zed/share/icons/hicolor/512x512/apps/zed.png"
  when: download_status.changed # Update only if the tarball was re-downloaded

- name: Update desktop file Exec path
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.local/share/applications/dev.zed.Zed.desktop"
    regexp: '^Exec=zed'
    line: "Exec={{ ansible_env.HOME }}/.local/opt/zed/libexec/zed-editor"
  when: download_status.changed # Update only if the tarball was re-downloaded

- name: Clean up extracted directory
  ansible.builtin.file:
    path: /tmp/zed.app
    state: absent

- name: Clean up downloaded tarball
  ansible.builtin.file:
    path: /tmp/zed-linux-x86_64.tar.gz
    state: absent
