set-option -g default-terminal "tmux-256color"

set-option -as terminal-overrides "*:Tc" # true color support
set-option -as terminal-overrides "*:RGB" # true color support
set-option -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set-option -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set-option -g window-status-separator ""
set-option -g renumber-windows on

# Detect if running in WSL and source appropriate theme
if-shell '[ "$(systemd-detect-virt 2>/dev/null)" = "wsl" ]' \
    'if-shell "reg.exe Query \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize\" /v AppsUseLightTheme 2>/dev/null | awk \"{if (match(\\$0, /0x/)) print substr(\\$3, 3, 1)}\" | grep -q \"0\"" \
        "source-file ~/.dotconfigs/tmux/gruvbox.conf; set-environment -g SYSTEM_COLOR_THEME dark" \
        "source-file ~/.dotconfigs/tmux/rose-pine-dawn.conf; set-environment -g SYSTEM_COLOR_THEME light"' \
    'if-shell "gsettings get org.gnome.desktop.interface color-scheme 2>/dev/null | grep -q \"prefer-dark\"" \
        "source-file ~/.dotconfigs/tmux/gruvbox.conf; set-environment -g SYSTEM_COLOR_THEME dark" \
        "source-file ~/.dotconfigs/tmux/rose-pine-dawn.conf; set-environment -g SYSTEM_COLOR_THEME light"'

# Windows will start from 1..n
set-option -g base-index 1

# Mouse support
set-option -g mouse on

# Set the escape time to 0 for faster key repetition
set-option -s escape-time 0

# Prefix
unbind-key C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-w' if-shell "$is_vim" 'send-keys C-w' 'switch-client -T VIMLIKE'

bind-key -T VIMLIKE 'h' if-shell "$is_vim" 'send-keys C-w h' 'select-pane -L'
bind-key -T VIMLIKE 'j' if-shell "$is_vim" 'send-keys C-w j' 'select-pane -D'
bind-key -T VIMLIKE 'k' if-shell "$is_vim" 'send-keys C-w k' 'select-pane -U'
bind-key -T VIMLIKE 'l' if-shell "$is_vim" 'send-keys C-w l' 'select-pane -R'
bind-key -T VIMLIKE '\' if-shell "$is_vim" 'send-keys C-w \\' 'select-pane -l'

# Fallback for non-vim panes (prefix + hjkl)
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Hot reload of config
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# Enable vi keys.
set-option -g mode-keys vi

# Disable tmux clipboard
set-option -s set-clipboard off

# Disable <prefix>-Enter to initiate copy-mode-vi
unbind-key -T copy-mode Enter

# Wayland copy command
set-option -s copy-command 'wl-copy'

# Selection keys to be used in copy-mode-vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Key and mouse to copy selection in copy-mode-vi
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel

bind-key s display-popup -E "\
    for session in \$(tmux list-sessions -F '#{?session_attached,,#{session_name}}' | sed '/^$/d'); do \
        count=\$(tmux list-windows -t \$session | wc -l); \
        echo \"\$session (\$count windows)\"; \
    done | \
    fzf --reverse --header jump-to-session --preview 'tmux list-windows -t \$(echo {} | cut -d\" \" -f1) -F \"#{?window_active,* ,  }#{window_index}: #{window_name} (#{window_panes} panes)\"' |\
    cut -d' ' -f1 |\
    xargs tmux switch-client -t"

bind-key S display-popup -E "bash -c '\
    selected=\$(find ~ -maxdepth 3 -type d \\( -name \".git\" -o -name \"node_modules\" -o -name \".venv\" \\) -prune -o -type d -print 2>/dev/null | head -200 | fzf --reverse --header=\"create-new-session\" --preview=\"ls -la {}\"); \
    if [ -n \"\$selected\" ]; then \
        session_name=\$(basename \"\$selected\" | tr \".\" \"_\"); \
        tmux new-session -d -s \"\$session_name\" -c \"\$selected\"; \
        tmux switch-client -t \"\$session_name\"; \
    fi'"

# Show directory selection on first tmux session
set-hook -g session-created 'if-shell "[ $(tmux list-sessions | wc -l) -eq 1 ]" "display-popup -E \"bash -c \\\"selected=\\\\\\$(find ~ -maxdepth 3 -type d \\\\\\( -name \\\\\\\".git\\\\\\\" -o -name \\\\\\\"node_modules\\\\\\\" -o -name \\\\\\\".venv\\\\\\\" \\\\\\) -prune -o -type d -print 2>/dev/null | head -200 | fzf --reverse --header=\\\\\\\"select-working-directory\\\\\\\" --preview=\\\\\\\"ls -la {}\\\\\\\"); if [ -n \\\\\\\"\\\\\\$selected\\\\\\\" ]; then tmux send-keys -t 0 \\\\\\\"cd \\\\\\\\\\\\\\\"\\\\\\$selected\\\\\\\\\\\\\\\"\\\\\\\" Enter; fi\\\"\""'
