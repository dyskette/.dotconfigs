# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
properties:
  assertions:
    - resource: Microsoft.Windows.Developer/OsVersion
      directives:
        description: Verify min OS version requirement
        allowPrerelease: true
      settings:
        MinVersion: "10.0.22000"
  resources:
    ### Configuration ###
    - resource: Microsoft.Windows.Developer/DeveloperMode
      id: DeveloperMode
      directives:
        description: Enable Developer Mode
        allowPrerelease: true
      settings:
        Ensure: Present
    - resource: ComputerManagementDsc/PowerShellExecutionPolicy
      id: PowerShellExecutionPolicy
      directives:
        description: Configure PowerShell execution policy for the current user
      settings:
        ExecutionPolicyScope: CurrentUser
        ExecutionPolicy: RemoteSigned
    ### Configuration ###

    ### Fonts ###
    - resource: PSDscResources/Script
      id: jetbrainsMonoNLNerdFont
      directives:
        description: Install JetBrains Mono NL Nerd font
        allowPrerelease: true
      settings:
        GetScript: return $false
        SetScript: . "${WinGetConfigRoot}\configuration.ps1"; InstallJetBrainsMonoFonts
        TestScript: return $false
    ### Fonts ###

    ### Chocolatey ###
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: chocolateyPackage
      directives:
        description: Install Chocolatey
        allowPrerelease: true
      settings:
        id: Chocolatey.Chocolatey
        source: winget
    - resource: PSDscResources/Script
      id: chocolateyEnv
      directives:
        description: Add chocolatey to path to install packages right away
        allowPrerelease: true
      dependsOn:
        - chocolateyPackage
      settings:
        GetScript: return $false
        SetScript: . "${WinGetConfigRoot}\configuration.ps1"; UpdateChocolateyEnvironmentVariables
        TestScript: return $false
    ### Chocolatey ###

    ### CLI ###
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: gitPackage
      directives:
        description: Install Git
        allowPrerelease: true
      settings:
        id: Git.Git
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: makePackage
      directives:
        description: Install Make
        allowPrerelease: true
      settings:
        id: ezwinports.make
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: wgetPackage
      directives:
        description: Install Wget
        allowPrerelease: true
      settings:
        id: JernejSimoncic.Wget
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: difftasticPackage
      directives:
        description: Install Difftastic
        allowPrerelease: true
      settings:
        id: Wilfred.difftastic
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: lessPackage
      directives:
        description: Install Less
        allowPrerelease: true
      settings:
        id: jftuga.less
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: jqPackage
      directives:
        description: Install jq
        allowPrerelease: true
      settings:
        id: jqlang.jq
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: yqPackage
      directives:
        description: Install yq
        allowPrerelease: true
      settings:
        id: MikeFarah.yq
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: fzfPackage
      directives:
        description: Install fzf
        allowPrerelease: true
      settings:
        id: junegunn.fzf
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: fdPackage
      directives:
        description: Install fd
        allowPrerelease: true
      settings:
        id: sharkdp.fd
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: ezaPackage
      directives:
        description: Install eza
        allowPrerelease: true
      settings:
        id: eza-community.eza
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: ripgrepPackage
      directives:
        description: Install ripgrep
        allowPrerelease: true
      settings:
        id: BurntSushi.ripgrep.MSVC
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: ffmpegPackage
      directives:
        description: Install ffmpeg
        allowPrerelease: true
      settings:
        id: Gyan.FFmpeg
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: yaziPackage
      directives:
        description: Install yazi
        allowPrerelease: true
      -dependsOn:
        - ffmpegPackage
        - fzfPackage
        - fdPackage
        - ripgrepPackage
        - jqPackage
      settings:
        id: sxyazi.yazi
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: starshipPackage
      directives:
        description: Install Starship
        allowPrerelease: true
      settings:
        id: Starship.Starship
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: azurecliPackage
      directives:
        description: Install Azure CLI
        allowPrerelease: true
      settings:
        id: Microsoft.AzureCLI
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: functionsPackage
      directives:
        description: Install Functions Core Tools
        allowPrerelease: true
      settings:
        id: Microsoft.Azure.FunctionsCoreTools
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: wslPackage
      directives:
        description: Install WSL
        allowPrerelease: true
      settings:
        id: Microsoft.WSL
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: podmanPackage
      directives:
        description: Install Podman
        allowPrerelease: true
      settings:
        id: RedHat.Podman
        source: winget
    ### CLI ###

    ### Bat ###
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: batPackage
      directives:
        description: Install bat
        allowPrerelease: true
      settings:
        id: sharkdp.bat
        source: winget
    - resource: PSDscResources/Script
      id: batConfiguration
      directives:
        description: Configure bat
        allowPrerelease: true
      dependsOn:
        - batPackage
      settings:
        GetScript: return $false
        SetScript: . "${WinGetConfigRoot}\configuration.ps1"; CreateBatDotfiles
        TestScript: return $false
    ### Bat ###

    ### PowerShell ###
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: powershellPackage
      directives:
        description: Install PowerShell
        allowPrerelease: true
      settings:
        id: Microsoft.PowerShell
        source: winget
    - resource: PSDscResources/Script
      id: powershellConfiguration
      directives:
        description: Configure PowerShell
        allowPrerelease: true
      dependsOn:
        - powershellPackage
        - starshipPackage
        - fzfPackage
        - batPackage
        - fdPackage
        - ripgrepPackage
        - neovimPackage
      settings:
        GetScript: return $false
        SetScript: . "${WinGetConfigRoot}\configuration.ps1"; CreatePowerShellProfile
        TestScript: return $false
    ### PowerShell ###

    ### Programming languages / Compilers ###
    - resource: cChoco/cChocoPackageInstaller
      id: mingwPackage
      directives:
        description: Choco install mingw
        allowPrerelease: true
      dependsOn:
        - chocolateyPackage
      settings:
        Name: mingw
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: denoPackage
      directives:
        description: Install Deno
        allowPrerelease: true
      settings:
        id: DenoLand.Deno
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: fnmPackage
      directives:
        description: Install fnm
        allowPrerelease: true
      settings:
        id: Schniz.fnm
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: pythonPackage
      directives:
        description: Install Python 3.12
        allowPrerelease: true
      settings:
        id: Python.Python.3.12
        source: winget
    ### Programming languages / Compilers ###

    ### WezTerm ###
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: weztermPackage
      directives:
        description: Install WezTerm
        allowPrerelease: true
      settings:
        id: wez.wezterm
        source: winget
    - resource: PSDscResources/Script
      id: weztermConfiguration
      directives:
        description: Configure WezTerm
        allowPrerelease: true
      dependsOn:
        - weztermPackage
        - jetbrainsMonoNLNerdFont
        - powershellPackage
      settings:
        GetScript: return $false
        SetScript: . "${WinGetConfigRoot}\configuration.ps1"; CreateWezTermDotfiles
        TestScript: return $false
    ### WezTerm ###

    ### Neovim ###
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: neovimPackage
      directives:
        description: Install Neovim
        allowPrerelease: true
      settings:
        id: Neovim.Neovim
        source: winget
    - resource: PSDscResources/Script
      id: neovimConfiguration
      directives:
        description: Configure Neovim
        allowPrerelease: true
      dependsOn:
        - neovimPackage
        - gitPackage
        - fzfPackage
        - batPackage
        - fdPackage
        - ripgrepPackage
        - makePackage
        - mingwPackage
      settings:
        GetScript: return $false
        SetScript: . "${WinGetConfigRoot}\configuration.ps1"; CreateNvimDotfiles
        TestScript: return $false
    ### Neovim ###

    ### Windows Terminal ###
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: windowsTerminalPackage
      directives:
        description: Install Windows Terminal
        allowPrerelease: true
      settings:
        id: Microsoft.WindowsTerminal
        source: winget
    - resource: PSDscResources/Script
      id: windowsTerminalConfiguration
      directives:
        description: Configure WezTerm
        allowPrerelease: true
      dependsOn:
        - windowsTerminalPackage
        - jetbrainsMonoNLNerdFont
        - powershellPackage
      settings:
        GetScript: return $false
        SetScript: . "${WinGetConfigRoot}\configuration.ps1"; CreateWindowsTerminalDotfiles
        TestScript: return $false
    ### Windows Terminal ###

    ### GUI ###
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: brunoPackage
      directives:
        description: Install Bruno
        allowPrerelease: true
      settings:
        id: Bruno.Bruno
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: dbeaverPackage
      directives:
        description: Install DBeaver
        allowPrerelease: true
      settings:
        id: dbeaver.dbeaver
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: obsidianPackage
      directives:
        description: Install Obsidian
        allowPrerelease: true
      settings:
        id: Obsidian.Obsidian
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: firefoxPackage
      directives:
        description: Install Firefox
        allowPrerelease: true
      settings:
        id: Mozilla.Firefox
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: keepassxcPackage
      directives:
        description: Install KeePassXC
        allowPrerelease: true
      settings:
        id: KeePassXCTeam.KeePassXC
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: storageExplorerPackage
      directives:
        description: Install Storage Explorer
        allowPrerelease: true
      settings:
        id: Microsoft.Azure.StorageExplorer
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: dropboxPackage
      directives:
        description: Install Dropbox
        allowPrerelease: true
      settings:
        id: Dropbox.Dropbox
        source: winget
    - resource: cChoco/cChocoPackageInstaller
      id: servicebusexplorerPackage
      directives:
        description: Choco install Service Bus Explorer
        allowPrerelease: true
      dependsOn:
        - chocolateyPackage
      settings:
        Name: servicebusexplorer
    ### GUI ###

    ### Visual Studio Code configuration ###
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: vsCodePackage
      directives:
        description: Install Visual Studio Code
        allowPrerelease: true
      settings:
        id: Microsoft.VisualStudioCode
        source: winget
    - resource: PSDscResources/Script
      id: vsCodeExtensions
      directives:
        description: Install Visual Studio Code extensions
        allowPrerelease: true
      dependsOn:
        - vsCodePackage
      settings:
        GetScript: return $false
        SetScript: . "${WinGetConfigRoot}\configuration.ps1"; InstallVSCodeExtensions
        TestScript: return $false
    - resource: PSDscResources/Script
      id: vsCodeConfiguration
      directives:
        description: Configure Visual Studio Code
        allowPrerelease: true
      dependsOn:
        - vsCodePackage
      settings:
        GetScript: return $false
        SetScript: . "${WinGetConfigRoot}\configuration.ps1"; CreateVSCodeDotfiles
        TestScript: return $false
    ### Visual Studio Code configuration ###

    ### JetBrains ###
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: riderPackage
      directives:
        description: Install JetBrains Rider
        allowPrerelease: true
      settings:
        id: JetBrains.Rider
        source: winget
    - resource: PSDscResources/Script
      id: JetBrainsConfiguration
      directives:
        description: Configure JetBrains
        allowPrerelease: true
      dependsOn:
        - riderPackage
      settings:
        GetScript: return $false
        SetScript: . "${WinGetConfigRoot}\configuration.ps1"; CreateJetBrainsDotfiles
        TestScript: return $false
    ### JetBrains ###

    ### Visual Studio ###
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: vsEnterprisePackage
      directives:
        description: Install Visual Studio 2022 Enterprise
        allowPrerelease: true
      settings:
        id: Microsoft.VisualStudio.2022.Enterprise
        source: winget
    - resource: Microsoft.VisualStudio.DSC/VSComponents
      id: vsComponents
      dependsOn:
        - vsEnterprisePackage
      directives:
        description: Install required VS workloads from vsconfig file
        allowPrerelease: true
      settings:
        productId: Microsoft.VisualStudio.Product.Enterprise
        channelId: VisualStudio.17.Release
        # Reference: https://learn.microsoft.com/en-us/visualstudio/install/workload-component-id-vs-build-tools?view=vs-2022
        vsConfigFile: '${WinGetConfigRoot}\.vsconfig'
        includeRecommended: true
    - resource: PSDscResources/Script
      id: vsConfiguration
      directives:
        description: Configure Visual Studio
        allowPrerelease: true
      dependsOn:
        - vsEnterprisePackage
      settings:
        GetScript: return $false
        SetScript: . "${WinGetConfigRoot}\configuration.ps1"; CreateVSDotfiles
        TestScript: return $false
    ### Visual Studio ###

  configurationVersion: 0.2.0
